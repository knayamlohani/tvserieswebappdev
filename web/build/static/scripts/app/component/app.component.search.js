"use strict";var __extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),__decorate=this&&this.__decorate||function(e,t,r,o){var i,n=arguments.length,a=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,o);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(n<3?i(a):n>3?i(t,r,a):i(t,r))||a);return n>3&&a&&Object.defineProperty(t,r,a),a},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(exports,"__esModule",{value:!0});var core_1=require("@angular/core"),app_service_tvseries_1=require("../service/app.service.tvseries"),app_service_logger_1=require("../service/app.service.logger"),router_1=require("@angular/router"),app_service_data_1=require("../service/app.service.data"),common_1=require("@angular/common"),SearchComponent=function(e){function t(t,r,o,i,n){var a=e.call(this)||this;return a.tvSeriesService=t,a.logger=r,a.router=o,a.dataService=i,a.location=n,a.name="",a.info="",a.searchViewActivatedStatus=!1,a.tvShows=[],a.fetchingTVShows=!1,a}return __extends(t,e),t.prototype.ngOnInit=function(){this.resetComponentData(),this.dataService.searchViewActivatedStatus&&this.activateSearchView()},t.prototype.resetComponentData=function(){this.name="",this.info="",this.searchViewActivatedStatus=!1,this.tvShows=[],this.fetchingTVShows=!1},t.prototype.activateSearchView=function(){this.logger.info("activate search view"),this.searchViewActivatedStatus=!0},t.prototype.searchTVSeries=function(){var e=this;this.searchViewActivatedStatus=!0,this.name=this.name.trim(),this.logger.info("search tv series: "+this.name),this.name&&(this.tvShows=[],this.info="",this.fetchingTVShows=!0,this.tvSeriesService.getTVSeriesByName(this.name).subscribe(function(t){if(e.fetchingTVShows=!1,e.tvShows=t,0==e.tvShows.length)e.info="Unable to find tv shows matching your request";else for(var r=0,o=e.tvShows;r<o.length;r++){var i=o[r];!function(t){t.fetchingBanners=!0,e.tvSeriesService.getBannersForTVSeriesWithId(t.id).subscribe(function(e){t.banners=e;for(var r=0,o=t.banners;r<o.length;r++){var i=o[r];if("poster"==i.type){t.artwork=i.url;break}}t.fetchingBanners=!1},function(e){t.fetchingBanners=!1})}(i)}},function(t){e.fetchingTVShows=!1,e.logger.error(t),e.info="Unable to fetch tv shows matching your request due to some unexpected error."}))},t.prototype.loadTVSeries=function(e){this.dataService.tvSeries=e,this.router.navigate(["/tv_series"])},t.prototype.exitSearchComponent=function(){this.dataService.searchViewActivatedStatus=!1,this.resetComponentData(),this.router.navigate(["/"])},t}(core_1.OnInit);SearchComponent=__decorate([core_1.Component({selector:"search-component",templateUrl:"views/app/component/app.component.search.html",styleUrls:["styles/app/component/app.component.search.css"]}),__metadata("design:paramtypes",[app_service_tvseries_1.TVSeriesService,app_service_logger_1.LoggerService,router_1.Router,app_service_data_1.DataService,common_1.Location])],SearchComponent),exports.SearchComponent=SearchComponent;